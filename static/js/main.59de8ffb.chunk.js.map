{"version":3,"sources":["components/About/index.js","views/Counter/index.js","containers/CounterContainer.js","views/Counter/bigCounter.js","containers/CounterParent.js","components/ErrorPage/index.js","components/Login/index.js","components/LoginRedux/loginSuccess.js","components/LoginRedux/loginRedux.js","actions/index.js","containers/LoginReduxContainer.js","App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["About","Counter","props","className","count","Button","variant","color","onClick","handleIncrement","handleDecrement","handleReset","CounterContainer","state","bind","this","setState","console","log","React","Component","Counter2","numOfCounters","counterIncrement","counterDecrement","counterReset","CounterParent","evenValue","Counters","i","push","Other","Fragment","CssBaseline","Container","validationSchema","yup","shape","email","required","password","typeError","min","Login","initialValues","validateOnBlur","onSubmit","values","resetForm","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","htmlFor","type","name","onChange","onBlur","value","disabled","JSON","stringify","connect","FormReducer","LoginRedux","emailUpdate","passwordUpdate","emailSuccess","passwordSuccess","minLength","updateEmail","createAction","updatePassword","withRouter","dispatch","event","target","preventDefault","history","App","routes","useState","setValue","handleTabs","e","val","path","render","AppBar","position","Tabs","Tab","label","component","Link","to","exact","LoginReduxContainer","LoginSuccess","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","handleActions","action","payload","rootReducer","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59de8ffb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n function About() {\r\n   return(\r\n  <div >You can get a sense for Nike's two primary purposes almost instantly -- fitness, and people. </div>\r\n   )\r\n}\r\nexport default About;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst Counter = (props) =>(\r\n\r\n    <div >\r\n\r\n  <h1 className=\"curHeader\"> {\"Current count  \" + props.count}</h1>\r\n \r\n      <Button variant=\"outlined\" color=\"primary\" onClick ={props.handleIncrement}>\r\n        Increment\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick ={props.handleDecrement}>\r\n       Decrement\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"default\" onClick ={props.handleReset}>\r\n       Reset\r\n      </Button>\r\n      \r\n     \r\n    </div>\r\n  );\r\n\r\n\r\nexport default Counter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Counter from '../views/Counter/index';\r\n\r\n\r\nclass CounterContainer  extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {count: 0 };\r\n  \r\n         this.handleIncrement = this.handleIncrement.bind(this) \r\n         this.handleDecrement = this.handleDecrement.bind(this) \r\n         this.handleReset = this.handleReset.bind(this)\r\n         \r\n    }\r\n   \r\n    handleIncrement () {\r\n        this.setState((state) =>({\r\n            count: this.state.count + 1,\r\n        }))\r\n    }\r\n    handleDecrement (){\r\n        this.setState((state) =>({\r\n            count: this.state.count - 1,\r\n        }))\r\n    }\r\n    handleReset (){\r\n        this.setState((state) =>({\r\n            count: 0 ,\r\n        }))\r\n    }\r\n    componentDidMount(){\r\n        console.log('did mount')\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log('will unmount')\r\n    }\r\n \r\n    render(){\r\n\r\n        const props ={\r\n            handleIncrement: this.handleIncrement,\r\n            count: this.state.count,\r\n            handleDecrement: this.handleDecrement,\r\n            handleReset: this.handleReset,\r\n        }\r\n \r\n      return(\r\n          <Counter {...props}/>\r\n      )  \r\n    \r\n      }\r\n    }\r\nCounterContainer.propTypes ={\r\n    handleIncrement: PropTypes.func,\r\n    count: PropTypes.number,\r\n    handleDecrement: PropTypes.func,\r\n    handleReset: PropTypes.func,\r\n    \r\n} \r\n\r\nexport default CounterContainer;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst Counter2 = (props) =>(\r\n\r\n    <div >\r\n      <h1 className=\"num\">how much?\r\n          <div>={props.numOfCounters}</div>\r\n      </h1>\r\n     <Button  variant=\"contained\" color=\"primary\" onClick={props.counterIncrement} >\r\n        Increment Counter\r\n      </Button>\r\n      <Button  variant=\"contained\" color=\"secondary\" onClick={props.counterDecrement} >\r\n        Decrement Counter\r\n      </Button>\r\n      <Button  variant=\"contained\" color=\"default\" onClick={props.counterReset} >\r\n        Reset Counter\r\n      </Button>\r\n\r\n   \r\n     \r\n    </div>\r\n  );\r\n\r\n\r\nexport default Counter2;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CounterContainer from './CounterContainer';\r\nimport Counter2 from '../views/Counter/bigCounter';\r\n\r\n\r\nclass CounterParent  extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n  \r\n    this.state = {\r\n        numOfCounters: 1\r\n    };\r\n    this.counterIncrement = this.counterIncrement.bind(this)\r\n    this.counterDecrement = this.counterDecrement.bind(this)\r\n    this.counterReset = this.counterReset.bind(this)\r\n    this.evenValue = this.evenValue.bind(this)\r\n\r\n   } \r\n \r\n    counterIncrement () {\r\n        this.setState((state) =>({\r\n            numOfCounters: this.state.numOfCounters + 1 ,\r\n            evenValue(){\r\n                \r\n            }\r\n        }))\r\n    }\r\n\r\n    counterDecrement(){\r\n        if(this.state.numOfCounters > 1){\r\n            this.setState((state) =>({\r\n            numOfCounters: this.state.numOfCounters - 1 ,\r\n        }))\r\n    }\r\n}\r\n    counterReset(){\r\n        this.setState((state) =>({\r\n            numOfCounters: 1,\r\n        }))\r\n    }\r\n\r\n    evenValue(){\r\n        if (this.state.count %2 === 0 ){\r\n            this.setState((state) =>({\r\n                count: this.state.count + 1,\r\n            }))\r\n        }\r\n    }\r\n        \r\n    \r\n  \r\n   // oddValue{\r\n\r\n   // }\r\n\r\n    componentDidMount(){\r\n        console.log('did mount')\r\n    }\r\n\r\n    render(){\r\n       const Counters = [];\r\n      for (var i = 0; i < this.state.numOfCounters; i += 1) {\r\n       Counters.push(<CounterContainer key={i} />);\r\n     };\r\n\r\n     const props ={\r\n        numOfCounters: this.state.numOfCounters,\r\n        counterIncrement: this.counterIncrement,\r\n        counterDecrement: this.counterDecrement,\r\n        counterReset: this.counterReset,\r\n        evenValue: this.evenValue\r\n      \r\n      }\r\n        return(\r\n            <div>\r\n            <Counter2 {...props}/>{Counters}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n    CounterParent.propTypes ={\r\n        counterIncrement: PropTypes.func,\r\n        numOfCounters: PropTypes.number,\r\n        counterDecrement: PropTypes.func,\r\n        counterReset: PropTypes.func,\r\n        evenValue: PropTypes.func\r\n    \r\n    }\r\n\r\n\r\nexport default CounterParent;\r\n","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n function Other() {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container className=\"error\" >\r\n        404 - страница не найдена :(\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Other;","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n        email: yup.string().email('Email is invalid').required(\"Email is required\"),\r\n        password: yup.string().typeError('Must be a string').required(\"Password is required\").min(6,'min 6 symbols')\r\n    })\r\n\r\nconst Login = () => {\r\n \r\n  return (\r\n  <div>\r\n      <h1>Log in</h1>\r\n      <Formik \r\n     initialValues={{\r\n          email: '',\r\n          password: ''\r\n      }}\r\n      validateOnBlur\r\n      onSubmit={(values, {resetForm})=>{\r\n          console.log(values)\r\n          resetForm()\r\n        }}\r\n      validationSchema={validationSchema}\r\n      >\r\n    {({ \r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        isValid, \r\n        handleSubmit, \r\n        dirty \r\n    }) => (\r\n          <div>\r\n              <p>\r\n                  <label htmlFor='email' className=\"names\" >Email</label> <br/>\r\n                  <input\r\n                  className=\"inputs\"\r\n                   type='email'\r\n                   name='email'\r\n                   onChange={handleChange}\r\n                   onBlur={handleBlur}\r\n                   value={values.email} />\r\n              </p>\r\n              {touched.email && errors.email && <p className=\"errors-message\">{errors.email}</p>}\r\n              <p>\r\n                  <label htmlFor='password' className=\"names\">Password</label> <br/>\r\n                  <input\r\n                   className=\"inputs\"\r\n                   type='password'\r\n                   name='password'\r\n                   onChange={handleChange}\r\n                   onBlur={handleBlur}\r\n                   value={values.password} />\r\n              </p>\r\n              {touched.password && errors.password && <p className=\"errors-message\">{errors.password}</p>}\r\n              <button\r\n                className =\"btn\"\r\n                disabled={!isValid && !dirty}\r\n                onClick={handleSubmit}\r\n                type='submit'\r\n                >Enter</button>\r\n                 <pre>\r\n                     <code>\r\n                    <strong>Your creds</strong> = {JSON.stringify(values.email, null, 2)}, \r\n                    {JSON.stringify(values.password, null, 2)}\r\n                    </code>\r\n                </pre>\r\n          </div>\r\n         \r\n       )}  \r\n       \r\n      </Formik>\r\n    \r\n        </div>\r\n   );\r\n   \r\n}\r\nexport default Login;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst LoginSuccess = ({email, password}) => {\r\n\r\n  return (\r\n    \r\n  <div>\r\n      <h1>Welcome, {email} </h1>\r\n      <p>Your password: {password}</p>\r\n  </div>\r\n   ); \r\n}\r\nconst mapStateToProps = (state) => ({\r\n    email: state.FormReducer.email,\r\n    password: state.FormReducer.password,\r\n  });\r\n\r\nexport default connect(mapStateToProps, null) (LoginSuccess);","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { Button } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\n//new with old login\r\n\r\n\r\nconst LoginRedux = ({ emailUpdate, passwordUpdate, onSubmit, emailSuccess, passwordSuccess }) => {\r\n  return (\r\n  <div>\r\n      <h1>Log in with Redux</h1>\r\n      <Formik>\r\n        <Form onSubmit={onSubmit}>\r\n          <div>\r\n              <p>\r\n                  <label htmlFor=\"email\" className=\"names\" >Email</label> <br/>\r\n                  <input\r\n                  className=\"inputs\"\r\n                   type='email'\r\n                   name='email'\r\n                   onChange={emailUpdate}\r\n                   required\r\n                  //onBlur={handleBlur}\r\n                   />\r\n              </p>\r\n              <p>\r\n                  <label htmlFor=\"password\" className=\"names\">Password</label> <br/>\r\n                  <input\r\n                   className=\"inputs\"\r\n                   type='password'\r\n                   name='password'\r\n                   onChange={passwordUpdate}\r\n                   required\r\n                   minLength =\"6\"\r\n                 \r\n                   //onBlur={handleBlur}\r\n                    />\r\n              </p>\r\n             \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type='submit'\r\n                \r\n                >Enter</Button>\r\n    \r\n          </div>\r\n          </Form>\r\n      </Formik>\r\n          <div>\r\n              <pre>\r\n                <code>\r\n                    <strong>Your creds</strong> = {JSON.stringify(emailSuccess)}, \r\n                    {JSON.stringify(passwordSuccess)}\r\n                </code>\r\n              </pre>\r\n          </div>\r\n        </div>\r\n   );  \r\n}\r\nLoginRedux.propTypes ={\r\n  emailUpdate: PropTypes.func,\r\n  passwordUpdate: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  emailSuccess: PropTypes.string,\r\n  passwordSuccess: PropTypes.string,\r\n}\r\nexport default LoginRedux;","import { createAction } from \"redux-actions\"\r\n\r\nexport const updateEmail = createAction(\"UPDATE_EMAIL\");\r\nexport const updatePassword = createAction(\"UPDATE_PASSWORD\");\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoginRedux from \"../components/LoginRedux/loginRedux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updateEmail, updatePassword } from '../actions/index';\r\n\r\n\r\nconst LoginReduxContainer = (props) => {\r\n  const { updateEmail, updatePassword } = props;\r\n   console.log(props)\r\n\r\n  const handleEmailUpdate = (event) => {\r\n    updateEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordUpdate = (event) => {\r\n    updatePassword(event.target.value);\r\n  };\r\n\r\n   const handleSubmit = (event) => {\r\n     event.preventDefault();\r\n     props.history.push(\"/Login-Redux/Success\");\r\n   };\r\n\r\n  return (\r\n    <LoginRedux\r\n      emailUpdate={handleEmailUpdate}\r\n      passwordUpdate={handlePasswordUpdate}\r\n      onSubmit={handleSubmit}\r\n      emailSuccess = {props.email}\r\n      passwordSuccess = {props.password}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.FormReducer.email,\r\n  password: state.FormReducer.password,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateEmail: (value) => dispatch(updateEmail(value)),\r\n    updatePassword: (value) => dispatch(updatePassword(value)),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(LoginReduxContainer)\r\n);","import React from 'react';\nimport './App.css';\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport About from './components/About';\nimport CounterParent from './containers/CounterParent';\nimport Other from './components/ErrorPage';\nimport Login from \"./components/Login\";\nimport LoginSuccess from './components/LoginRedux/loginSuccess';\nimport LoginReduxContainer from './containers/LoginReduxContainer';\n\n\nfunction App() {\nconst routes = [\"/About\",\"/Counters\", \"/Login\",\"/Login-Redux\",'/404', '/Login-Redux/Success'];\nconst [value, setValue] = React.useState(0)\nconst handleTabs=(e,val)=>{\n  setValue(val)\n}\n\n  return (\n      <div className=\"App\">\n      <Router>\n      <Route\n       path = \"/\"\n       render={(history) => (\n\n      \n      <AppBar position=\"static\">\n        <Tabs value= {value} onChange={handleTabs}>\n          <Tab \n            \n            label=\"About\" \n            //value={routes[0]}\n            component = {Link}\n            to = {routes[0]} />\n          <Tab\n            \n            label=\"Counters\"\n           // value={routes[1]}\n            component = {Link} \n            to = {routes[1]}/>\n          <Tab\n            \n            label=\"Login\"\n           // value={routes[2]}\n            component = {Link} \n            to = {routes[2]}/>\n          <Tab\n            \n            label=\"Login-Redux\"\n           // value={routes[3]}\n            component = {Link} \n            to = {routes[3]}/>\n      \n          </Tabs>\n      </AppBar>\n       )} />\n\n      <Switch>\n      \n      <Route path=\"/About\" component ={About} />\n      <Route path=\"/Counters\" component ={CounterParent} />\n      <Route path=\"/Login\" component ={Login} />\n      <Route exact path=\"/Login-Redux\" component ={LoginReduxContainer} />\n      <Route path=\"/Login-Redux/Success\" component ={LoginSuccess} />\n      <Route path=\"/404\"component ={Other} />\n      \n      </Switch>\n      \n      </Router>\n      </div>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { handleActions } from 'redux-actions';\r\nimport { updateEmail, updatePassword } from '../actions';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\n const FormReducer = handleActions(\r\n{\r\n  [updateEmail] : ( state,action) =>({\r\n    ...state,\r\n     email: action.payload\r\n   }),\r\n   [updatePassword] : ( state, action) => ({\r\n     ...state,\r\n      password: action.payload,\r\n})\r\n},\r\n initialState\r\n )\r\n\r\nexport default FormReducer;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {combineReducers, createStore} from 'redux';\nimport FormReducer from './reducer';\n\n\nconst  rootReducer = combineReducers({\n  FormReducer: FormReducer\n \n})\nconst store = createStore(rootReducer);\n \nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}