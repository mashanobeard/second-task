{"version":3,"sources":["views/Counter/index.js","containers/CounterContainer.js","views/Counter/index2.js","containers/CounterParent.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","className","count","Button","variant","color","onClick","handleIncrement","handleDecrement","handleReset","CounterContainer","state","bind","this","setState","console","log","React","Component","Counter2","numOfCounters","counterIncrement","counterDecrement","counterReset","CounterParent","evenValue","Counters","i","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8240a9c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst Counter = (props) =>(\r\n\r\n    <div >\r\n\r\n  <h1 className=\"curHeader\"> {\"Current count  \" + props.count}</h1>\r\n \r\n      <Button variant=\"outlined\" color=\"primary\" onClick ={props.handleIncrement}>\r\n        Increment\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick ={props.handleDecrement}>\r\n       Decrement\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"default\" onClick ={props.handleReset}>\r\n       Reset\r\n      </Button>\r\n      \r\n     \r\n    </div>\r\n  );\r\n\r\n\r\nexport default Counter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Counter from '../views/Counter/index';\r\n\r\n\r\nclass CounterContainer  extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {count: 0 };\r\n  \r\n         this.handleIncrement = this.handleIncrement.bind(this) \r\n         this.handleDecrement = this.handleDecrement.bind(this) \r\n         this.handleReset = this.handleReset.bind(this)\r\n         \r\n    }\r\n   \r\n    handleIncrement () {\r\n        this.setState((state) =>({\r\n            count: this.state.count + 1,\r\n        }))\r\n    }\r\n    handleDecrement (){\r\n        this.setState((state) =>({\r\n            count: this.state.count - 1,\r\n        }))\r\n    }\r\n    handleReset (){\r\n        this.setState((state) =>({\r\n            count: 0 ,\r\n        }))\r\n    }\r\n    componentDidMount(){\r\n        console.log('did mount')\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log('will unmount')\r\n    }\r\n \r\n    render(){\r\n\r\n        const props ={\r\n            handleIncrement: this.handleIncrement,\r\n            count: this.state.count,\r\n            handleDecrement: this.handleDecrement,\r\n            handleReset: this.handleReset,\r\n        }\r\n \r\n      return(\r\n          <Counter {...props}/>\r\n      )  \r\n    \r\n      }\r\n    }\r\nCounterContainer.propTypes ={\r\n    handleIncrement: PropTypes.func,\r\n    count: PropTypes.number,\r\n    handleDecrement: PropTypes.func,\r\n    handleReset: PropTypes.func,\r\n    \r\n} \r\n\r\nexport default CounterContainer;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst Counter2 = (props) =>(\r\n\r\n    <div >\r\n      <h1 className=\"num\">how much?\r\n          <div>={props.numOfCounters}</div>\r\n      </h1>\r\n     <Button  variant=\"contained\" color=\"primary\" onClick={props.counterIncrement} >\r\n        Increment Counter\r\n      </Button>\r\n      <Button  variant=\"contained\" color=\"secondary\" onClick={props.counterDecrement} >\r\n        Decrement Counter\r\n      </Button>\r\n      <Button  variant=\"contained\" color=\"default\" onClick={props.counterReset} >\r\n        Reset Counter\r\n      </Button>\r\n\r\n   \r\n     \r\n    </div>\r\n  );\r\n\r\n\r\nexport default Counter2;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CounterContainer from './CounterContainer';\r\nimport Counter2 from '../views/Counter/index2';\r\n\r\n\r\nclass CounterParent  extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n  \r\n    this.state = {\r\n        numOfCounters: 1\r\n    };\r\n    this.counterIncrement = this.counterIncrement.bind(this)\r\n    this.counterDecrement = this.counterDecrement.bind(this)\r\n    this.counterReset = this.counterReset.bind(this)\r\n    this.evenValue = this.evenValue.bind(this)\r\n\r\n   } \r\n \r\n    counterIncrement () {\r\n        this.setState((state) =>({\r\n            numOfCounters: this.state.numOfCounters + 1 ,\r\n            evenValue(){\r\n                \r\n            }\r\n        }))\r\n    }\r\n\r\n    counterDecrement(){\r\n        if(this.state.numOfCounters > 1){\r\n            this.setState((state) =>({\r\n            numOfCounters: this.state.numOfCounters - 1 ,\r\n        }))\r\n    }\r\n}\r\n    counterReset(){\r\n        this.setState((state) =>({\r\n            numOfCounters: 1,\r\n        }))\r\n    }\r\n\r\n    evenValue(){\r\n        if (this.state.count %2 === 0 ){\r\n            this.setState((state) =>({\r\n                count: this.state.count + 1,\r\n            }))\r\n        }\r\n    }\r\n        \r\n    \r\n  \r\n   // oddValue{\r\n\r\n   // }\r\n\r\n    componentDidMount(){\r\n        console.log('did mount')\r\n    }\r\n\r\n    render(){\r\n       const Counters = [];\r\n      for (var i = 0; i < this.state.numOfCounters; i += 1) {\r\n       Counters.push(<CounterContainer key={i} />);\r\n     };\r\n\r\n     const props ={\r\n        numOfCounters: this.state.numOfCounters,\r\n        counterIncrement: this.counterIncrement,\r\n        counterDecrement: this.counterDecrement,\r\n        counterReset: this.counterReset,\r\n        evenValue: this.evenValue\r\n      \r\n      }\r\n        return(\r\n            <div>\r\n            <Counter2 {...props}/>{Counters}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n    CounterParent.propTypes ={\r\n        counterIncrement: PropTypes.func,\r\n        numOfCounters: PropTypes.number,\r\n        counterDecrement: PropTypes.func,\r\n        counterReset: PropTypes.func,\r\n        evenValue: PropTypes.func\r\n    \r\n    }\r\n\r\n\r\nexport default CounterParent;\r\n","import './App.css';\n\nimport CounterParent from './containers/CounterParent';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1 className=\"header\">My counter</h1>\n       <CounterParent /> \n      \n     \n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}